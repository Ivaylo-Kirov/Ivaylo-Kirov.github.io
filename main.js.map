{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/mortgage-calculator/mortgage-calculator.component.ts","./src/app/mortgage-calculator/mortgage-calculator.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mortgage-calculator';\n}\n","<div class=\"container\">\n  <h2>RBC Angular Exercise - Ivaylo Kirov - Sep. 14, 2020</h2>\n  <br/>\n  <app-mortgage-calculator></app-mortgage-calculator>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MortgageCalculatorComponent } from './mortgage-calculator/mortgage-calculator.component';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MortgageCalculatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-mortgage-calculator',\n  templateUrl: './mortgage-calculator.component.html',\n  styleUrls: ['./mortgage-calculator.component.css']\n})\nexport class MortgageCalculatorComponent implements OnInit {\n\n  mortgageForm;\n  ready: boolean = false;\n  payments: number = 0;\n  mortgageAmount: number = 620000;\n  interestRate: number = 5;\n  amortizationPeriod: number = 25;\n  paymentFrequency: number = 12;\n\n  constructor(private formBuilder: FormBuilder) { \n    this.mortgageForm = this.formBuilder.group({\n      mortgageAmount: this.mortgageAmount,\n      interestRate: this.interestRate,\n      amortizationPeriod: this.amortizationPeriod,\n      paymentFrequency: this.paymentFrequency\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  calculatePayments(mortgageAmount:number, interestRate:number, amortizationPeriod:number, paymentFrequency:number) {\n    let interestAmount: number = (mortgageAmount * (interestRate/100));\n    let result: number = mortgageAmount + interestAmount;\n    let yearlyPayment: number = result / amortizationPeriod;\n    let payment: number = yearlyPayment / paymentFrequency;\n    return payment;\n  }\n\n  onSubmit(mortgageData) {\n    this.payments = this.calculatePayments(parseInt(mortgageData.mortgageAmount), parseInt(mortgageData.interestRate), parseInt(mortgageData.amortizationPeriod), parseInt(mortgageData.paymentFrequency));\n    this.ready = true;\n  }\n\n}\n","<div class=\"container\">\n    <h3>Mortgage Calculator</h3>\n    <br/>\n    <form [formGroup]=\"mortgageForm\" (ngSubmit)=\"onSubmit(mortgageForm.value)\">\n        <div class=\"row\">\n            <div class=\"col\">\n            <label for=\"mortgageAmount\">\n                Mortgage Amount ($)\n            </label>\n            <input id=\"mortgageAmount\" class=\"form-control\" type=\"text\" formControlName=\"mortgageAmount\">\n            </div>\n            <br/>\n            <div class=\"col\">\n            <label for=\"interestRate\">\n                Interest Rate (%)\n            </label>\n            <input id=\"interestRate\" class=\"form-control\" type=\"text\" formControlName=\"interestRate\">\n            </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n            <div class=\"col\">\n                <label for=\"amortizationPeriod\">\n                Amortization Period (years)\n                </label>\n                <input id=\"amortizationPeriod\" class=\"form-control\" type=\"text\" formControlName=\"amortizationPeriod\">\n            </div>\n        \n            <div class=\"col\">\n                <label for=\"paymentFrequency\">\n                Payment Frequency (per year)\n                </label>\n                <input id=\"paymentFrequency\" class=\"form-control\" type=\"text\" formControlName=\"paymentFrequency\">\n            </div>\n        </div>\n        <br/>\n        <button class=\"button\" class=\"btn btn-primary\" type=\"submit\">Calculate</button>\n    </form>\n    <br/>\n    <div *ngIf=\"ready\">\n        <h4>Required payments: {{ payments | currency:'CAD':'code' }}</h4>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}